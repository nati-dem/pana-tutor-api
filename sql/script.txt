
DROP DATABASE IF EXISTS panalearncom_tutor;
CREATE DATABASE panalearncom_tutor;

CREATE TABLE panalearncom_tutor.course_enrollment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    course_id INT UNSIGNED NOT NULL,
    user_id INT UNSIGNED NOT NULL,
    trial_exp_date TIMESTAMP NULL,
    complete_date TIMESTAMP NULL,
    status ENUM('active', 'disabled') NOT NULL,
    enroll_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE panalearncom_tutor.course_progress (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    enrollment_id INT UNSIGNED,
    section_id INT UNSIGNED,
    lesson_id INT UNSIGNED,
    modify_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (enrollment_id) REFERENCES panalearncom_tutor.course_enrollment(id) ON DELETE CASCADE
);

CREATE TABLE panalearncom_tutor.enroll_payment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    enrollment_id INT UNSIGNED,
    amount VARCHAR(10) NOT NULL,
    method VARCHAR(30) NOT NULL,
    pay_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (enrollment_id) REFERENCES panalearncom_tutor.course_enrollment(id) ON DELETE CASCADE
);

CREATE TABLE panalearncom_tutor.attachment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    file_url VARCHAR(255) NOT NULL,
    file_type VARCHAR(10),
    file_size VARCHAR(10),
    upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE panalearncom_tutor.course_announcement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    course_id INT UNSIGNED NOT NULL,
    user_id INT UNSIGNED NOT NULL,
    content TEXT NOT NULL,
    attachment_id INT UNSIGNED NULL,
    post_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (attachment_id) REFERENCES panalearncom_tutor.attachment(id)
);

CREATE TABLE panalearncom_tutor.quiz_init (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    quiz_id INT UNSIGNED NOT NULL,
    student_id INT UNSIGNED NOT NULL,
    enrollment_id INT UNSIGNED,
    date_start TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    timer SMALLINT
);

CREATE TABLE panalearncom_tutor.quiz_ans_entry (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    quiz_init_id INT UNSIGNED NOT NULL,
    que_id INT UNSIGNED NOT NULL,
    marked_for_review ENUM('1', '0') NOT NULL DEFAULT '0',
    answer VARCHAR(255) NULL,
    instructor_feedback VARCHAR(255) NULL,
    is_correct ENUM('1', '0') NOT NULL DEFAULT '0',
    FOREIGN KEY (quiz_init_id) REFERENCES panalearncom_tutor.quiz_init(id)
);

CREATE TABLE panalearncom_tutor.quiz_submission (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    quiz_init_id INT UNSIGNED NOT NULL,
    total_score TINYINT UNSIGNED NOT NULL,
    date_submit TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    instructor_feedback VARCHAR(255),
    instructor_id INT UNSIGNED,
    FOREIGN KEY (quiz_init_id) REFERENCES panalearncom_tutor.quiz_init(id)
);

CREATE TABLE panalearncom_tutor.tutor_request (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    student_id INT UNSIGNED NOT NULL,
    tutor_ids VARCHAR(50) NULL,
    course VARCHAR(128) NOT NULL,
    grade_level INT UNSIGNED NULL,
    start_date DATETIME NOT NULL,
    duration VARCHAR(25) NULL,
    group_allowed ENUM('1', '0') NOT NULL DEFAULT '1',
    trial_exp_date DATETIME NULL,
    remark VARCHAR(128) NULL,
    status ENUM('active', 'pending', 'rejected') NOT NULL DEFAULT 'pending',
    req_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

/* should there be multiple board instances in given course?
CREATE TABLE panalearncom_tutor.tutor_board (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    course_id INT UNSIGNED NOT NULL
);  */

CREATE TABLE panalearncom_tutor.tutor_group (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    course_id INT UNSIGNED NOT NULL,
    status ENUM('active', 'locked', 'disabled') NOT NULL DEFAULT 'active',
    start_date DATETIME NOT NULL,
    created_by INT UNSIGNED NOT NULL,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE panalearncom_tutor.tutor_group_members (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    tutor_group_id INT UNSIGNED NOT NULL,
    user_id INT UNSIGNED NOT NULL,
    user_role ENUM('admin', 'instructor', 'moderator', 'subscriber') NOT NULL DEFAULT 'subscriber',
    status ENUM('active', 'disabled') NOT NULL DEFAULT 'active',
    join_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (tutor_group_id) REFERENCES panalearncom_tutor.tutor_group(id)
);

CREATE TABLE panalearncom_tutor.tutor_group_meeting (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    tutor_group_id INT UNSIGNED NOT NULL,
    description VARCHAR(255) NOT NULL,
    date_time VARCHAR(30) NOT NULL,
    recurring_until VARCHAR(30) NULL,
    user_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (tutor_group_id) REFERENCES panalearncom_tutor.tutor_group(id)
);

CREATE TABLE panalearncom_tutor.tutor_board_posts (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    course_id INT UNSIGNED NOT NULL,
    post_title VARCHAR(128) NOT NULL,
    post_content VARCHAR(255) NULL,
    post_type ENUM('generic','assignment', 'media', 'material', 'link') NOT NULL DEFAULT 'generic',
    points INT UNSIGNED NOT NULL DEFAULT 0,
    due_date DATETIME NULL,
    status ENUM('published', 'draft', 'hidden') NOT NULL DEFAULT 'published',
    created_by INT UNSIGNED NOT NULL,
    post_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE panalearncom_tutor.tutor_board_post_access (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    post_id INT UNSIGNED NOT NULL,
    group_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (post_id) REFERENCES panalearncom_tutor.tutor_board_posts(id) ON DELETE CASCADE,
    FOREIGN KEY (group_id) REFERENCES panalearncom_tutor.tutor_group(id)
);

CREATE TABLE panalearncom_tutor.tutor_board_post_attachments (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    board_post_id INT UNSIGNED NOT NULL,
    attachment_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (board_post_id) REFERENCES panalearncom_tutor.tutor_board_posts(id),
    FOREIGN KEY (attachment_id) REFERENCES panalearncom_tutor.attachment(id)
);

/* should tutor price be dt for same course depending on group? */
CREATE TABLE panalearncom_tutor.tutor_group_price (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    tutor_group_id INT UNSIGNED NOT NULL,
    payment_amount INT UNSIGNED NOT NULL,
    FOREIGN KEY (tutor_group_id) REFERENCES panalearncom_tutor.tutor_group(id)
);

CREATE TABLE panalearncom_tutor.tutor_group_pay_history (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    tutor_group_id INT UNSIGNED NOT NULL,
    payment_amount INT UNSIGNED NOT NULL,
    payment_method VARCHAR(128) NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (tutor_group_id) REFERENCES panalearncom_tutor.tutor_group(id)
);

CREATE TABLE panalearncom_tutor.users (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL UNIQUE,
    name VARCHAR(128) NOT NULL,
    email VARCHAR(128) NOT NULL UNIQUE,
    phone VARCHAR(20) NULL,
    address VARCHAR(128) NULL,
    user_role ENUM('administrator', 'author', 'contributor', 'instructor', 'subscriber') NOT NULL DEFAULT 'subscriber',
    status ENUM('active', 'pending', 'disabled', 'locked', 'deleted') NOT NULL DEFAULT 'active',
    avatar VARCHAR(128) NULL,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

/*
user_reward

user_review

*/
